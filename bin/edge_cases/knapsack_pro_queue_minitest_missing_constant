#!/bin/bash

# Scenario 1
# Test case when the file has syntax error and it cannot be run via Minitest.
# Test file: test/controllers/pending_controller_test.rb
# To reproduce the case add to the test file at the very beginning:
#
# MissingConstantHereToTestDefect
#
# Unfortunately pending controller test would fail during runtime and the timing for CI node won't be recorded.
# That's fine. Knapsack Pro API would return again the tests that supposed to be run when the developer will retry CI node.

# Scenario 2
# We want to test scenario when the test file won't be executed (it's empty) and
# to the Knapsack Pro API should be send summary of tests timing with the empty test file.
# When KNAPSACK_PRO_FIXED_QUEUE_SPLIT=true we expect retried CI build to run the empty test file.

# If you want to record a new CI build then set
# KNAPSACK_PRO_FIXED_QUEUE_SPLIT=false
# and run this file for both CI nodes.
# bin/edge_cases/knapsack_pro_queue_minitest_missing_constant 0
# bin/edge_cases/knapsack_pro_queue_minitest_missing_constant 1
# Then you can set
# KNAPSACK_PRO_FIXED_QUEUE_SPLIT=true
# and run tests to see if the test file:
# test/controllers/pending_controller_test.rb
# was executed.

CI_BUILD_ID=$(openssl rand -base64 32)

RAILS_ENV=test \
KNAPSACK_PRO_ENDPOINT=http://api.knapsackpro.test:3000 \
  KNAPSACK_PRO_TEST_SUITE_TOKEN_MINITEST=a1d15e9837f9a4b8ec8eb5477048607a \
  KNAPSACK_PRO_REPOSITORY_ADAPTER=git \
  KNAPSACK_PRO_PROJECT_DIR=. \
  KNAPSACK_PRO_CI_NODE_TOTAL=${2:-2} \
  KNAPSACK_PRO_CI_NODE_INDEX=${1:-0} \
  KNAPSACK_PRO_TEST_FILE_PATTERN=test/controllers/*_test.rb \
  KNAPSACK_PRO_FIXED_QUEUE_SPLIT=xtrue \
  KNAPSACK_PRO_CI_NODE_BUILD_ID=${3:-$CI_BUILD_ID} \
  bundle exec rake knapsack_pro:queue:minitest[--verbose]
